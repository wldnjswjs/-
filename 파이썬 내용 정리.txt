파이썬에서는 따옴표를 출력할 때 \를 사용할 수 있는데, 문자 앞에 \가 붙으면
문자의 특수한 의미를 잃어버린다. 따옴표 앞에 붙이면 문자열을 나타내는 따옴표의
특수한 의미를 잃어버리고 하나의 문자가 된다.
message = 'doesn\'t'
print(message)
doesn't

print()함수 사용시에 \가 앞에 붙은 문자를 특수 문자로 취급하고 싶지 않다면 첫 번째 따옴표 앞에
r을 추가하여 특수 문자의 의미를 없앨 수 있다.
print("c:\temp\name")
c:\temp
ame
print(r"c:\temp\name")
c:\temp\name

%s를 사용하여 문자열에 변수의 값을 출력 가능, 하나 이상은 괄호로 묶어서 % 뒤에 명기해야 함.
message = '오늘은 %월 %일입니다.'
print(message %(3, 1))
오늘은 3월 1일입니다.

파이썬에서 한번 작성된 문자열은 변경이 불가능.
리스트는 변경가능한 객체.

우선순위 큐(Priority Queue)란 먼저 들어오는 데이터가 아니라, 정해진 우선순위가 높은 데이터가 먼저 나가는 형태의 자료구조이다.
우선순위 큐는 일반적으로 힙(heap)을 이용하여 구현한다.
힙의 특징
완전이진트리 형태로 이루어져 있다.
부모노드와 서브트리간 대소 관계가 성립된다.
이진탐색트리(BST)와 달리 중복된 값이 허용된다.
힙의 종류
최대 힙(Max Heap)
부모 노드의 키 값이 자식 노드보다 크거나 같은 완전이진트리이다.
key(부모노드) >= key(자식노드)
최소 힙(Min Heap)
부모 노드의 키 값이 자식 노드보다 작거나 같은 같은 완전이진트리이다 .
key(부모노드) <= key(자식노드)

파이썬 힙 자료구조
파이썬 heapq 모듈은 heapq 알고리즘을 제공한다. 
모든 부모 노드는 그의 자식노드보다 값이 작거나 큰 이진트리 구조인데, 내부적으로는 인덱스 0에서 시작해서 k번째 원소가 항상 자식 원소들(2k+1, 2k+2) 보다 작거나 같은 최소 힙의 형태로 정렬된다. 
heapq.heappush(heap, item): item을 heap에 추가
heapq.heappop(heap): heap에서 가장 작은 워소를 pop & 리턴. 비어있는 경우 IndexError가 호출됨.
heapq.heapify(x): 리스트 x를 즉각적으로 heap으로 변환함 (in linear time, O(n))

입력을 받을 때 input()을 많이 쓴다. 하지만 input()을 사용하면 시간 초과 에러가 뜰 때가 있다. 이를 방지하기 위해 sys.stdin.readline() 사용한다. 
input()의 경우 인자로 prompt message를 받을 수 있다는 특징이 있다. 
사용자가 입력하는 값 하나마나마다 버퍼에 저장하는 특징이 있다. 이때 입력의 종료가 되는 기준이 개행 문자가 되므로, 개행 문자를 생략한 값을 입력 값에 저장할 수 있다. 
sys.stdin.readline()은 prompt message를 받아 출력하는 기능이 없기 때문에 상대적으로 속도가 더 빠르다. 

sys.stdin.readline()은 문자열로 입력을 받는다. 개행 문자"\n"를 같이 입력받는다. 
.strip() 함수를 사용하여 문자열의 맨 앞, 맨 끝의 공백을 제거 가능
.rstrip(): 오른쪽에서 공백 제거
.lstrip(): 왼쪽에서 공백 제거

- ''.join(리스트)
''.join(리스트)를 이용하면 매개변수로 들어온 ['a', 'b', 'c'] 이런 식의 리스트를 'abc'의 문자열로 합쳐서 반환해주는 함수인 것입니다.